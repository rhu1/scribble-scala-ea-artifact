module ea.example.savina.dining.Dining;


data <scala> "Int" from "" as Int;


// M with each Pi
global protocol Proto1(role M, role P1) {
    Start() from M to P1;
}


// Each Pi with A
global protocol Proto2(role P, role A) {
    Hungry0(Int) from P to A;  // Phil ID 1..N
    do Proto2Aux(P, A);
}

aux global protocol Proto2Aux(role P, role A) {
    choice at A {
        Denied() from A to P;
        HungryD(Int) from P to A;  // Phil ID 1..N
        do Proto2Aux(P, A);
    } or {
        Eat() from A to P;
        Done(Int) from P to A;  // Phil ID 1..N
        choice at P {
            // !!! self send Start
            HungryE(Int) from P to A;  // Phil ID 1..N
            do Proto2Aux(P, A);
        } or {
            Exit() from P to A;
        }
    }
}