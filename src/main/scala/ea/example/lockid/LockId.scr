// > mnt/c/Users/Raymond/winroot/home/eey335/code/java/intellij/git/github.com/rhu1/scribble-java-ea-artifact
// ./scribblec-ea.sh c:/Users/Raymond/winroot/home/eey335/code/scala/intellij/git/github.com/rhu1/scribble-scala-ea-artifact/src/main/scala/ea/example/lockid/LockId.scr Proto1 -d test/scrib/out

module ea.example.lockid.LockId;


data <scala> "Int" from "" as Int;
data <scala> "String" from "" as String;


global protocol Proto1(role S, role C) {
    choice at C {
        IDRequest(String) from C to S;
        choice at S {
            IDResponse(Int) from S to C;  // if UNlocked
            do Proto1(S, C);
        } or {
            ReqUnavailable() from S to C;  // !!! label
            do Proto1(S, C);
        }
    } or {
        LockRequest() from C to S;
        choice at S {
            Locked() from S to C;
            do Proto1Aux(S, C);
        } or {
            LockUnavailable() from S to C;
            do Proto1(S, C);
        }
    }
}

aux global protocol Proto1Aux(role S, role C) {
    Unlock() from C to S;
    do Proto1(S, C);
}


/*
IDServer ≜
Client → Server : {
    IDRequest() .
    Server → Client : {
        IDResponse(Int) . IDServer,
        Unavailable() . IDServer
    },
    LockRequest() .
    Server → Client : {
        Locked() . AwaitUnlock,
        Unavailable() . IDServer
    },
    Quit() . end
}
AwaitUnlock ≜
Client → Server : Unlock() . IDServer
*/
